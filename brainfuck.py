def brainfuck(code):
    stack = [0] * 33000
    stackPos = 0
    codePos = 0

    while codePos < len(code):
        c = code[codePos]
        #if c in "<>+-,.[]": print(stack, c, stackPos, codePos)
        if c == ">":
            stackPos += 1
            assert stackPos < len(stack)
        if c == "<":
            stackPos -= 1
            assert stackPos >= 0            
        if c == "+":
            stack[stackPos] += 1
        if c == "-":
            stack[stackPos] -= 1
        if c == ".":
            print(chr(stack[stackPos]), end='', flush=True)
        if c == ",":
            key = int(input("input:"))
            assert key >= 0 and key <= 255
            stack[stackPos] = key
        if c == "[":
            if stack[stackPos] == 0:
                counter = 1
                while counter > 0: # jump to bracket counterpart
                    codePos += 1
                    if code[codePos] == "]": counter -= 1
                    if code[codePos] == "[": counter += 1
                    assert codePos < len(code)
        elif c == "]":
            if stack[stackPos] != 0:
                counter = 1
                while counter > 0: # jump to bracket counterpart
                    codePos -= 1
                    if code[codePos] == "[": counter -= 1
                    if code[codePos] == "]": counter += 1
                    assert codePos >= 0

        codePos += 1
    return

brainfuck(
    """
++++++++++
 [
  >+++++++>++++++++++>+++>+<<<<-
 ]                       Schleife zur Vorbereitung der Textausgabe
 >++.                    Ausgabe von 'H'
 >+.                     Ausgabe von 'e'
 +++++++.                'l'
 .                       'l'
 +++.                    'o'
 >++.                    Leerzeichen
 <<+++++++++++++++.      'W'
 >.                      'o'
 +++.                    'r'
 ------.                 'l'
 --------.               'd'
 >+.                     '!'
 >.                      Zeilenvorschub
 +++.                    WagenrÃ¼cklauf
"""
) # hello world
#brainfuck("""
#>++++++++++>+>+[
#    [+++++[>++++++++<-]>.<++++++[>--------<-]+<<<]>.>>[
#        [-]<[>+<-]>>[<<+>+>-]<[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-
#            [>+<-[>+<-[>+<-[>[-]>+>+<<<-[>+<-]]]]]]]]]]]+>>>
#    ]<<<
#]
#""") # fibonacci
brainfuck("++[>+[>+<[>-]>->]<-<]>->")
brainfuck("""
>+>++>+>+<[>[-<+++++>]<<]>
[->+>+<<]>
[- >[->+>+>+<<<]>>>[-<<<+>>>]<<
[- >[->+>+>+<<<]>>>[-<<<+>>>]<<
    [->[-]< [->+>+<<]>>[-<<+>>] <<]
<<]>[-]<
<<]>[-]<
<<++++++++++[>++++++++>+<<-]>-.----.>.""") # test
brainfuck("""
>>>>++>+>++>+>>++<+[  
  [>[>>[>>>>]<<<<[[>>>>+<<<<-]<<<<]>>>>>>]+<]>-
  >>--[+[+++<<<<--]++>>>>--]+[>>>>]<<<<[<<+<+<]<<[
    >>>>>>[[<<<<+>>>>-]>>>>]<<<<<<<<[<<<<]
    >>-[<<+>>-]+<<[->>>>[-[+>>>>-]-<<-[>>>>-]++>>+[-<<<<+]+>>>>]<<<<[<<<<]]
    >[-[<+>-]]+<[->>>>[-[+>>>>-]-<<<-[>>>>-]++>>>+[-<<<<+]+>>>>]<<<<[<<<<]]<<
  ]>>>+[>>>>]-[+<<<<--]++[<<<<]>>>+[
    >-[
      >>[--[++>>+>>--]-<[-[-[+++<<<<-]+>>>>-]]++>+[-<<<<+]++>>+>>]
      <<[>[<-<<<]+<]>->>>
    ]+>[>>>>]-[+<<<<--]++<[
      [>>>>]<<<<[
        -[+>[<->-]++<[[>-<-]++[<<<<]+>>+>>-]++<<<<-]
        >-[+[<+[<<<<]>]<+>]+<[->->>>[-]]+<<<<
      ]
    ]>[<<<<]>[
      -[
        -[
          +++++[>++++++++<-]>-.>>>-[<<<----.<]<[<<]>>[-]>->>+[
            [>>>>]+[-[->>>>+>>>>>>>>-[-[+++<<<<[-]]+>>>>-]++[<<<<]]+<<<<]>>>
          ]+<+<<
        ]>[
          -[
            ->[--[++>>>>--]->[-[-[+++<<<<-]+>>>>-]]++<+[-<<<<+]++>>>>]
            <<<<[>[<<<<]+<]>->>
          ]<
        ]>>>>[--[++>>>>--]-<--[+++>>>>--]+>+[-<<<<+]++>>>>]<<<<<[<<<<]<
      ]>[>+<<++<]<
    ]>[+>[--[++>>>>--]->--[+++>>>>--]+<+[-<<<<+]++>>>>]<<<[<<<<]]>>
  ]>
]
""") # compute e
